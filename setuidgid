#!/usr/bin/env python

import pwd, sys, os, grp

if len(sys.argv) < 3:
    sys.stderr.write(sys.argv[0] + ": usage: setuidgid account child\n")
    exit(100)

account = sys.argv[1]

try:
    user = pwd.getpwnam(account)
except KeyError:
    sys.stderr.write(sys.argv[0] + ": fatal: unknown account " + account + "\n")
    exit(111)

command = sys.argv[2]

uid = user.pw_uid
gid = user.pw_gid
groups = [g.gr_gid for g in grp.getgrall() if user.pw_name in g.gr_mem]

try:
    os.setgid(gid)
except OSError as e:
    sys.stderr.write(sys.argv[0] + ": fatal: unable to setgid: " + e.strerror + "\n")
    exit(111)

try:
    os.setgroups(groups)
except OSError as e:
    sys.stderr.write(sys.argv[0] + ": fatal: unable to setgroups: " + e.strerror + "\n")
    exit(111)

try:
    os.setuid(uid)
except OSError as e:
    sys.stderr.write(sys.argv[0] + ": fatal: unable to setuid: " + e.strerror + "\n")
    exit(111)

command_full_path = ""
if command.find("/") >= 0:
    command_full_path = command
else:
    for path in os.environ["PATH"].split(os.pathsep):
        exe_file = os.path.join(path, command)
        if os.path.isfile(exe_file) and os.access(exe_file, os.X_OK):
            command_full_path = exe_file
            break

try:
    os.execv(command_full_path, sys.argv[2:])
except OSError as e:
    sys.stderr.write(sys.argv[0] + ": fatal: unable to run " + command + ": " + e.strerror + "\n")
    exit(111)
